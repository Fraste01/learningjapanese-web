/* eslint-disable @typescript-eslint/no-unused-vars */
import { useState } from "react";
import { type QuizConfigProps } from "../types/Quiz";

export const QuizConfig = ({ onConfigConfirmed }: QuizConfigProps) => {
    const [config] = useState<QuizConfigProps>();
    //TODO: Configure the quiz like the dictionary/kanji/grammar to use by the difficulty, how many question to make
    //      the level of JLPT (N5, N4, N3, N2, N1) and other configurations.
    //TODO: After approving the config I need to start the quiz
    const [argumentsKanji] = useState([]);
    const [argumentsDictionary] = useState([]);
    const [argumentsGrammar] = useState([]);
    const [argumentsSelected, setArgumentsSelected] = useState<string[]>([]);

    const [selectedKanji, setSelectedKanji] = useState<string[]>([]);
    const [selectedDictionary, setSelectedDictionary] = useState<string[]>([]);
    const [selectedGrammar, setSelectedGrammar] = useState<string[]>([]);

    const selectArguments = (value: string) => {
        if (argumentsSelected.includes(value)) argumentsSelected.splice(argumentsSelected.indexOf(value), 1);
        else argumentsSelected.push(value);
    }

    return (
        <div>
            <p>Quiz Config Here</p>
            {/* Kanji / Dictionary / Grammar */}
            <div>
                <label className="block mb-2 text-sm font-medium text-gray-50 dark:text-white">Arguments</label>
                {/* TODO: Make this style better*/}
                <div className="flex items-start mb-6">
                    <div className="flex items-center h-5">
                        <input type="checkbox" value="Kanji" onSelect={() => selectArguments("Kanji")}
                               className="w-4 h-4 border border-gray-50 rounded-sm bg-gray-300 focus:ring-3 focus:ring-blue-300" />
                    </div>
                    <label className="ms-2 text-sm font-medium text-gray-50">Kanji</label>
                </div>
                <div className="flex items-start mb-6">
                    <div className="flex items-center h-5">
                        <input type="checkbox" value="Dictionary" onSelect={() => selectArguments("Dictionary")} 
                               className="w-4 h-4 border border-gray-50 rounded-sm bg-gray-300 focus:ring-3 focus:ring-blue-300"/>
                    </div>
                    <label className="ms-2 text-sm font-medium text-gray-50">Dictionary</label>
                </div>
                <div className="flex items-start mb-6">
                    <div className="flex items-center h-5">
                        <input type="checkbox" value="Grammar" onSelect={() => selectArguments("Grammar")} 
                               className="w-4 h-4 border border-gray-50 rounded-sm bg-gray-300 focus:ring-3 focus:ring-blue-300"/>
                    </div>
                    <label className="ms-2 text-sm font-medium text-gray-50">Grammar</label>
                </div>
            </div>

            {/* Selected arguments */}
            <div>
                <label className="block mb-2 text-sm font-medium text-gray-50 dark:text-white">Selected arguments for quiz</label>
                {/* TODO: Make this as a select box that the user can pick the arguments he wants to check*/}
                <input type="text" placeholder="arguments selected" className="border border-gray-300 text-gray-50 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" value={config?.selectedArgoments} />
            </div>

            {/* N5, N4, N3, N2, N1 */}
            <div>
                {/* TODO: Fix the selection to return the value to {config?.difficulty} */}
                <label className="block mb-2 text-sm font-medium text-gray-50 dark:text-white">Level of arguments (N5, N4, N3, N2, N1)</label>
                <select onSelect={() => console.log(argumentsSelected)}
                    className="border border-gray-50 text-gray-50 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5">
                    <option value="N5">N5</option>
                    <option value="N4">N4</option>
                    <option value="N3">N3</option>
                    <option value="N2">N2</option>
                    <option value="N1">N1</option>
                </select>
            </div>

            {/* Number of questions min value is 1 */}
            <div>
                <label className="block mb-2 text-sm font-medium text-gray-50 dark:text-white">Number of questions</label>
                {/* Select for the number of question to be generated by argument (must be > 0) */}
                <input type="number" placeholder="number of questions" className="border border-gray-300 text-gray-50 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" value={config?.numberOfQuestions} />
            </div>
            
            <button onClick={(e) => {
              e.stopPropagation();
              console.log('Config Confirmed');
              onConfigConfirmed();
            }}>Confirm Config</button>
        </div>
    );
};